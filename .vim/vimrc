let g:coc_enable = 1
let s:nvim_treesitter = 1

" dein {{{
"dein Scripts-----------------------------
if &compatible
  set nocompatible               " Be iMproved
endif

" Required:
set runtimepath+=~/.dotfiles/.vim/dein.vim
" Required:
call dein#begin('~/.dotfiles/.vim/dein')

" Let dein manage dein
" Required:
call dein#add('~/.dotfiles/.vim/dein.vim')
call dein#add('wsdjeg/dein-ui.vim')

" lightline
call dein#add('itchyny/lightline.vim')
call dein#add('lu5je0/lightline-bufferline')

call dein#add('jiangmiao/auto-pairs')
call dein#add('schickling/vim-bufonly')
call dein#add('theniceboy/vim-calc')
call dein#add('rootkiter/vim-hexedit')
call dein#add('mattn/vim-gist')
call dein#add('mattn/webapi-vim')
" Plug 'rhysd/committia.vim'

if !has("mac") && platform#is_wsl()
    call dein#add("lu5je0/im-switcher")
endif
" Plug 'lyokha/vim-xkbswitch'

if has("nvim")
    let s:nvim_treesitter = 1
    call dein#add('nvim-treesitter/nvim-treesitter')
    call dein#config('nvim-treesitter/nvim-treesitter', {
    \ 'hook_source': ':TSUpdate'
    \ })
endif

" filetype
call dein#add('chr4/nginx.vim')
call dein#add('cespare/vim-toml')
call dein#add('elzr/vim-json')
call dein#add('lu5je0/vim-java-bytecode')
call dein#add('MTDL9/vim-log-highlighting')

" fern
call dein#add('lambdalisue/fern.vim')
call dein#add('lambdalisue/fern-hijack.vim')
call dein#add('lambdalisue/nerdfont.vim')
call dein#add('lu5je0/fern-renderer-nerdfont.vim')
call dein#add('lambdalisue/glyph-palette.vim')
call dein#add('lambdalisue/fern-git-status.vim')
call dein#add('yuki-yano/fern-preview.vim')

" lazy load
call dein#add('mg979/vim-visual-multi')
call dein#add('sgur/vim-textobj-parameter')
call dein#add('kana/vim-textobj-entire')
call dein#add('mhinz/vim-signify')
call dein#add('voldikss/vim-translator')
call dein#add('tpope/vim-fugitive')
call dein#add('rbong/vim-flog')
call dein#add('lu5je0/vim-terminal-help')
call dein#add('skywind3000/asynctasks.vim')
call dein#add('skywind3000/asyncrun.vim')
call dein#add('skywind3000/asyncrun.extra')
call dein#add('mbbill/undotree')
call dein#add('junegunn/vim-peekaboo')
call dein#add('tpope/vim-surround')
call dein#add('liuchengxu/vista.vim')
call dein#add('machakann/vim-highlightedyank')
" save with sudo
if !has("win32")
    call dein#add('lambdalisue/suda.vim')
endif
" if !has("gui") && !has("mac")
"     call dein#add('brglng/vim-im-select')
" endif

call dein#add('SirVer/ultisnips')
call dein#add('dstein64/vim-startuptime')
call dein#add('yianwillis/vimcdoc')
call dein#add('chrisbra/vim-diff-enhanced')
call dein#add('tpope/vim-commentary')
call dein#add('lu5je0/vim-snippets')
call dein#add('kana/vim-textobj-user')
call dein#add('tpope/vim-repeat')
call dein#add('vim-scripts/ReplaceWithRegister')
call dein#add('tommcdo/vim-exchange')
call dein#add('liuchengxu/vim-which-key')
call dein#add('lu5je0/vim-base64')

if !has("gui")
    call dein#add('iamcco/markdown-preview.nvim', { 'build': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']})
endif

if g:coc_enable == 1
    call dein#add('neoclide/coc.nvim', {'rev': 'release'})
else
    call dein#add('ervandew/supertab')
endif

call dein#add('Yggdroot/LeaderF', { 'do': './install.sh' })

" themes
call dein#add('tomasiser/vim-code-dark')
call dein#add('lu5je0/vim-one')
call dein#add('gruvbox-community/gruvbox')
call dein#add('hzchirs/vim-material')
call dein#add('ayu-theme/ayu-vim')
call dein#add('w0ng/vim-hybrid')
call dein#add('lu5je0/lightline-ones')

" Required:
call dein#end()

" Required:
filetype plugin indent on
syntax enable

" If you want to install not installed plugins on startup.
"if dein#check_install()
"  call dein#install()
"endif
" }}}

" vim-plug {{{
" }}}

" runtime 加载.vim {{{
runtime settings.vim
runtime foldtext.vim

if g:coc_enable == 1
    runtime plug-config/coc.vim
endif

if has("win32")
    runtime escalt.vim
endif
runtime gvim.vim
runtime functions.vim
runtime plug-config/leaderf.vim
runtime plug-config/autoformat.vim
runtime plug-config/terminal.vim
runtime plug-config/lightline.vim
runtime plug-config/vista.vim
" }}}

" vim-xkbswitch {{{
let g:XkbSwitchEnabled = 1
let g:XkbSwitchLib = '/usr/local/lib/libInputSourceSwitcher.dylib'
" }}}
 
" autocmd {{{
augroup file_type
    autocmd!
    autocmd FileType * set formatoptions-=o | if getfsize(@%) > 1024 * 1024 | setlocal syntax=OFF | endif
    autocmd FileType help set buflisted
augroup END
" }}}
 
" visual_multi {{{
let g:VM_maps = {}
let g:VM_maps["Select Cursor Down"] = '<m-n>'
" let g:VM_maps["Select Cursor Up"]   = '<m-N>'
" }}}
 
" treesitter {{{ "
if s:nvim_treesitter == 1
lua <<EOF
require'nvim-treesitter.configs'.setup {
  -- Modules and its options go here
  ensure_installed = { "java", "python", "lua", "c", "json" },
  highlight = { enable = true },
  incremental_selection = { enable = true },
  textobjects = { enable = true },
}
EOF
set foldmethod=expr
set foldexpr=nvim_treesitter#foldexpr()
endif
" }}} treesitter "

" vim-diff-enhanced {{{
set diffopt+=internal,algorithm:patience
" }}}

" vim-json {{{
let g:vim_json_syntax_conceal = 0
" }}}

" vim-gist {{{
let github_user = 'lu5je0@gmail.com'
let g:gist_show_privates = 1
let g:gist_post_private = 1
" }}}

" vim-commentary {{{
augroup vim_commentary
    autocmd FileType crontab setlocal commentstring=#\ %s
augroup END
" }}}

" auto-paris {{{
let g:AutoPairs= {'(':')', '[':']', '{':'}',"'":"'",'"':'"', "`":"`", '```':'```', '"""':'"""', "'''":"'''"}
let g:AutoPairsShortcutToggle = ''
let g:AutoPairsShortcutJump = ''
let g:AutoPairsShortcutFastWrap = ''
let g:AutoPairsMoveCharacter = ''
" }}}

" vim-textobj-parameter {{{
let g:vim_textobj_parameter_mapping = 'a'
" }}}

" delimitMate {{{
let g:delimitMate_expand_cr=1
" }}}

" supertab {{{
let g:SuperTabDefaultCompletionType = "<c-n>"
" }}}

" highlightedyank {{{
let g:highlightedyank_highlight_duration=300
" }}}

" ultisnips {{{
let g:UltiSnipsExpandTrigger="<c-d>"
" }}}

" toggle_terminal {{{

" set your favorite shell
if has("win32")
    let g:toggle_terminal#command = 'wsl'
else
    let g:toggle_terminal#command = ''
endif

" set terminal window position
" (see possible options at :help vertical)
" let g:toggle_terminal#position = 's'

" }}}

" undotree {{{
let g:undotree_WindowLayout = 3
let g:undotree_SetFocusWhenToggle = 1
" }}}

" alias {{{
command! Json set ft=json
command! Jp set ft=jproperties
command! Diff windo difft
command! Diffo windo diffo
" }}}

" 主题配置 {{{
" colorscheme codedark
" let g:lightline.colorscheme = 'apprentice'

" colorscheme gruvbox
" let g:lightline.colorscheme = 'gruvbox'

colorscheme one
let g:lightline.colorscheme = 'one'
set bg=dark
hi TSPunctBracket guifg=#ABB2BF
" }}}

runtime mappings.vim
runtime whichkey.vim
runtime misc.vim
runtime runner.vim
runtime plug-config/fern.vim
